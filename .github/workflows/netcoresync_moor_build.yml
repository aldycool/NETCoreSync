name: netcoresync_moor_build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  full-build:
    name: "Build netcoresync_moor"
    runs-on: ubuntu-20.04
    services:
      postgres_svc:
        image: postgres:13.4
        env:
          POSTGRES_DB: NETCoreSyncServerTimeStampDB
          POSTGRES_USER: NETCoreSyncServerTimeStamp_User
          POSTGRES_PASSWORD: NETCoreSyncServerTimeStamp_Password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5   
        ports:
          - 5432:5432 
    defaults:
      run:
        working-directory: netcoresync_moor

    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v1
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'

      - name: Echo the Postgres service ID / Network / Ports
        run: |
          echo "id: ${{ job.services.postgres_svc.id }}"
          echo "network: ${{ job.services.postgres_svc.network }}"
          echo "ports: ${{ job.services.postgres_svc.ports }}"

      - name: Use custom sqlite3
        run: |
          mkdir -p /tmp/sqlite/out
          cp test/dylib/sqlite3/linux/* /tmp/sqlite/out/
          chmod a+x /tmp/sqlite/out/sqlite3
          echo "/tmp/sqlite/out" >> $GITHUB_PATH
          echo "LD_LIBRARY_PATH=/tmp/sqlite/out" >> $GITHUB_ENV

      - name: Check sqlite3 version
        run: sqlite3 --version

      - name: Install dependencies
        run: dart pub get

      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: Analyze project source
        run: dart analyze

      - name: Generator for tests
        run: dart run build_runner build --delete-conflicting-outputs

      - name: Prepare coverage tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y lcov
          dart pub global activate coverage
          echo "$HOME/.pub_cache/bin" >> $GITHUB_PATH

      - name: Tests
        run: dart test --coverage=coverage
        env:
          NETCORESYNCSERVER_POSTGRES_HOST: localhost

      - name: Collect coverage
        run: |
          format_coverage --lcov --in=coverage --out=lcov.info --packages=.packages --report-on=lib
          mv lcov.info coverage/lcov.info

      - name: Upload coverage
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          fail_ci_if_error: true
          verbose: true
